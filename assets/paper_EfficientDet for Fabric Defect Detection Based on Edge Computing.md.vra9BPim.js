import{_ as a,c as e,o as i,R as t}from"./chunks/framework.Cp3V7vRL.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"paper/EfficientDet for Fabric Defect Detection Based on Edge Computing.md","filePath":"paper/EfficientDet for Fabric Defect Detection Based on Edge Computing.md","lastUpdated":1743044679000}'),l={name:"paper/EfficientDet for Fabric Defect Detection Based on Edge Computing.md"},r=t('<h3 id="基于边缘计算的efficientdet在织物缺陷检测中的应用" tabindex="-1">基于边缘计算的EfficientDet在织物缺陷检测中的应用 <a class="header-anchor" href="#基于边缘计算的efficientdet在织物缺陷检测中的应用" aria-label="Permalink to &quot;基于边缘计算的EfficientDet在织物缺陷检测中的应用&quot;">​</a></h3><h2 id="_20241209" tabindex="-1">20241209 <a class="header-anchor" href="#_20241209" aria-label="Permalink to &quot;20241209&quot;">​</a></h2><h2 id="_1-标题" tabindex="-1">1. 标题 <a class="header-anchor" href="#_1-标题" aria-label="Permalink to &quot;1. 标题&quot;">​</a></h2><ul><li><strong>原文标题</strong>: EfficientDet for Fabric Defect Detection Based on Edge Computing</li><li><strong>中文标题</strong>: 基于边缘计算的EfficientDet织物缺陷检测研究</li></ul><hr><h2 id="_2-摘要" tabindex="-1">2. 摘要 <a class="header-anchor" href="#_2-摘要" aria-label="Permalink to &quot;2. 摘要&quot;">​</a></h2><h3 id="英文" tabindex="-1">英文 <a class="header-anchor" href="#英文" aria-label="Permalink to &quot;英文&quot;">​</a></h3><p>The productivity of textile industry is positively correlated with the efficiency of fabric defect detection. Traditional manual detection methods have gradually been replaced by deep learning algorithms based on cloud computing due to the low accuracy and high cost of manual methods. Nonetheless, these cloud computing-based methods are still suboptimal due to the data transmission latency between the end devices and the cloud. To facilitate defect detection with more efficiency, a low-latency, low power consumption, easy upgrade, and automatical visual inspection system with the help of edge computing are proposed in this work. Firstly, the method uses EfficientDet-D0 as the detection algorithm, integrating the advantages of lightweight and scalable and can suit the resource-constrained edge device. Secondly, we performed data augmentations on five fabric datasets and verified the adaptability of the model in different types of fabrics. Finally, we transplanted the trained model to the edge device NVIDIA Jetson TX2 and optimized the model with TensorRT to make it detection faster. The performance of the proposed method is evaluated in five fabric datasets. The detection speed is up to 22.7 frame per second (FPS) on the edge device Jetson TX2. Compared with the cloud-based method, the response time is reduced by 2.5 times, with the capability of real-time industrial defect detection.</p><h3 id="中文" tabindex="-1">中文 <a class="header-anchor" href="#中文" aria-label="Permalink to &quot;中文&quot;">​</a></h3><p>纺织业的生产效率与织物缺陷检测效率呈正相关。由于传统人工检测方法准确率低且成本高，已逐渐被基于云计算的深度学习算法取代。然而，基于云计算的方法因终端设备与云端之间的数据传输延迟而仍不理想。为了更高效地进行缺陷检测，本文提出了一种借助边缘计算的低延迟、低功耗、易于升级的自动视觉检测系统。该方法首先使用EfficientDet-D0作为检测算法，融合了轻量化和可扩展性的优势，适用于资源受限的边缘设备。其次，对五个织物数据集进行数据增强，验证了模型对不同类型织物的适应性。最后，将训练好的模型移植到边缘设备NVIDIA Jetson TX2上，并使用TensorRT对模型进行优化以加快检测速度。在五个织物数据集上对所提方法的性能进行评估，在边缘设备Jetson TX2上检测速度可达每秒22.7帧（FPS）。与基于云计算的方法相比，响应时间缩短了2.5倍，具备实时工业缺陷检测能力。</p><hr><h2 id="_3-作者" tabindex="-1">3. 作者 <a class="header-anchor" href="#_3-作者" aria-label="Permalink to &quot;3. 作者&quot;">​</a></h2><ul><li><strong>姓名</strong>: Shaojun Song, Junfeng Jing, Yanqing Huang, Mingyang Shi</li><li><strong>背景</strong>: 来自西安工程大学电子与信息学院</li><li><strong>相关研究</strong>: 在深度学习于工业检测领域的应用以及计算机视觉与边缘计算的结合方面有所探索，此前可能有相关算法研究或工程实践经验。</li></ul><hr><h2 id="_4-关键词" tabindex="-1">4. 关键词 <a class="header-anchor" href="#_4-关键词" aria-label="Permalink to &quot;4. 关键词&quot;">​</a></h2><ul><li>边缘计算 (Edge Computing)：将计算能力和存储设施下沉到靠近用户或数据源的一侧，整合网络、计算、存储和应用的核心功能，有效解决数据传输延迟、带宽成本高等问题，适用于对实时性和低延迟要求较高的工业场景。</li><li>织物缺陷检测 (Fabric Defect Detection)：在纺织工业生产过程中，检测织物是否存在缺陷，如由机器故障、纱线缺陷或缝纫设备油污等导致的问题，对保证产品质量、提升企业竞争力至关重要。</li><li>深度学习 (Deep Learning)：利用卷积神经网络等技术自动提取图像特征，克服了传统图像处理算法需手动设计特征提取方案的局限性，显著提高了模型的通用性和检测效果。</li><li>卷积神经网络 (Convolutional Neural Network)：深度学习中的重要技术，通过卷积层、池化层等结构自动学习图像特征，广泛应用于图像识别、目标检测等领域，是本文检测算法的核心基础。</li></ul><hr><h2 id="_5-领域背景" tabindex="-1">5. 领域背景 <a class="header-anchor" href="#_5-领域背景" aria-label="Permalink to &quot;5. 领域背景&quot;">​</a></h2><h3 id="技术历史" tabindex="-1">技术历史 <a class="header-anchor" href="#技术历史" aria-label="Permalink to &quot;技术历史&quot;">​</a></h3><ul><li>早期纺织业主要依赖人工检测织物缺陷，但人工检测存在准确率有限（仅约70%）且劳动成本高昂的问题。</li><li>随着计算机技术发展，基于计算机视觉（CV）的自动检测系统逐渐兴起，其中深度学习方法在近年来因图形处理单元（GPU）计算能力提升而取得显著进展，相比传统方法在通用性上有很大优势。</li></ul><h3 id="算法比较" tabindex="-1">算法比较 <a class="header-anchor" href="#算法比较" aria-label="Permalink to &quot;算法比较&quot;">​</a></h3><ul><li>传统图像识别检测方法包括统计分析、频域分析和模型分析等，如利用Gabor滤波器带和晶格分割提取特征的方法，以及应用高斯 - 马尔可夫随机场（GMRF）模型提取特征和检测的方法，但这些方法大多需要手动设计特征提取方案，通用性受限。</li><li>深度学习方法使用卷积神经网络（CNN）自动提取特征，如将CNN应用于墙体裂缝检测展现出良好性能，在织物缺陷检测中也有应用，如基于YOLO - V3的检测方法通过数据集聚类和增加网络检测层提高检测效果。</li></ul><h3 id="技术挑战" tabindex="-1">技术挑战 <a class="header-anchor" href="#技术挑战" aria-label="Permalink to &quot;技术挑战&quot;">​</a></h3><ul><li>工业场景中高速运行的生产线要求检测系统具备实时性和低响应延迟，以快速检测出缺陷织物，避免影响生产效率。</li><li>为降低生产成本，生产线应尽量降低功耗，同时检测系统需具备良好的可扩展性，以便未来方便升级，适应不断变化的生产需求。</li></ul><hr><h2 id="_6-文献归纳" tabindex="-1">6. 文献归纳 <a class="header-anchor" href="#_6-文献归纳" aria-label="Permalink to &quot;6. 文献归纳&quot;">​</a></h2><h3 id="传统检测方法" tabindex="-1">传统检测方法 <a class="header-anchor" href="#传统检测方法" aria-label="Permalink to &quot;传统检测方法&quot;">​</a></h3><ul><li>基于统计的方法，如Latif - Amet等人提出的子带共生矩阵（SBCM）结合小波理论和共生矩阵检测纺织图像缺陷，但方法可靠性及在其他织物上的适用性不明确。</li><li>频谱分析方法，如Anandan和Sabeenian利用Curvelet变换（CT）和灰度共生矩阵（GLCM）检测潜在纹理缺陷，但未提及算法实时性。</li><li>模型分析方法，如Xiaobo和Allili等人分别应用GMRF模型和高斯混合模型提取织物特征和检测，但计算成本高且对小缺陷检测精度低。</li></ul><h3 id="深度学习方法" tabindex="-1">深度学习方法 <a class="header-anchor" href="#深度学习方法" aria-label="Permalink to &quot;深度学习方法&quot;">​</a></h3><ul><li>Ouyang等人提出基于深度学习的在机织物缺陷检测方法，结合多种技术，但未提及检测速度是否满足实际应用要求。</li><li>Li等人提出紧凑CNN架构用于常见织物缺陷检测；Liu等人提出多级GAN网络生成缺陷样本并通过语义分割网络检测，在数据集精度指标上表现良好。</li><li>Zhao等人提出多缺陷检测管道应用于复兴号动车组，改进了区域建议网络（RPN）的锚点和特征融合机制，但深度学习方法在系统部署时通常需要大量计算资源，资源不足会严重降低检测性能。</li></ul><h3 id="边缘计算及其应用" tabindex="-1">边缘计算及其应用 <a class="header-anchor" href="#边缘计算及其应用" aria-label="Permalink to &quot;边缘计算及其应用&quot;">​</a></h3><ul><li>边缘计算是将计算能力和存储设施下沉到数据源附近的开放平台，能有效解决云计算中数据传输导致的效率问题，其分布式部署和靠近数据源的优势可解决高宽带成本、传输延迟和数据拥塞等问题，随着5G加速应用，在工业互联网、智慧城市和智能交通等领域应用不断扩展，如Lin等人将边缘计算框架与深度Q网络（DQN）结合解决作业车间调度问题，Liu等人提出基于边缘设备的视频识别系统用于饮食评估和公共智能监控跟踪等。</li></ul><hr><h2 id="_7-切入点" tabindex="-1">7. 切入点 <a class="header-anchor" href="#_7-切入点" aria-label="Permalink to &quot;7. 切入点&quot;">​</a></h2><p>通过深入分析工业自动织物缺陷检测系统的需求，发现现有方法在实时性、低功耗和可扩展性方面的不足，从而提出将轻量化、可扩展的EfficientDet算法与边缘计算相结合的方案，特别针对边缘设备资源受限的情况进行优化，以满足工业生产线对快速、准确检测缺陷的迫切需求。</p><hr><h2 id="_8-缺口分析" tabindex="-1">8. 缺口分析 <a class="header-anchor" href="#_8-缺口分析" aria-label="Permalink to &quot;8. 缺口分析&quot;">​</a></h2><h3 id="云计算方法的不足" tabindex="-1">云计算方法的不足 <a class="header-anchor" href="#云计算方法的不足" aria-label="Permalink to &quot;云计算方法的不足&quot;">​</a></h3><ul><li>数据传输延迟：在云计算模式下，大量图像和视频数据传输会造成数据拥塞，严重影响生产效率，导致检测速度受限，无法满足工业实时检测要求。</li></ul><h3 id="工业场景需求未满足" tabindex="-1">工业场景需求未满足 <a class="header-anchor" href="#工业场景需求未满足" aria-label="Permalink to &quot;工业场景需求未满足&quot;">​</a></h3><ul><li>低功耗要求：现有检测系统在生产线运行过程中功耗较高，增加了生产成本，不利于企业长期发展。</li><li>可扩展性挑战：随着工业生产的发展和变化，检测系统需要具备良好的可扩展性，以便方便地进行升级，但目前的方法在这方面存在一定困难。</li></ul><hr><h2 id="_9-原因分析" tabindex="-1">9. 原因分析 <a class="header-anchor" href="#_9-原因分析" aria-label="Permalink to &quot;9. 原因分析&quot;">​</a></h2><h3 id="云端计算瓶颈" tabindex="-1">云端计算瓶颈 <a class="header-anchor" href="#云端计算瓶颈" aria-label="Permalink to &quot;云端计算瓶颈&quot;">​</a></h3><ul><li>云计算依赖强大的数据中心进行集中处理，数据需在终端设备与云端之间传输，传输过程中的延迟、带宽占用等问题导致整体检测效率降低，尤其在处理大量实时数据时，数据传输成为系统性能的瓶颈。</li></ul><h3 id="边缘设备资源限制" tabindex="-1">边缘设备资源限制 <a class="header-anchor" href="#边缘设备资源限制" aria-label="Permalink to &quot;边缘设备资源限制&quot;">​</a></h3><ul><li>边缘设备计算资源相对有限，难以直接部署复杂的深度学习模型，导致检测性能下降。传统深度学习模型在资源受限环境下无法充分发挥作用，因此需要专门针对边缘设备设计优化的检测算法和系统架构。</li></ul><hr><h2 id="_10-研究问题" tabindex="-1">10. 研究问题 <a class="header-anchor" href="#_10-研究问题" aria-label="Permalink to &quot;10. 研究问题&quot;">​</a></h2><p>如何设计一种能够在边缘设备上高效运行、轻量化且高精度的织物缺陷检测系统，以满足工业生产线对实时性、低功耗和可扩展性的严格需求，克服云计算模式下的数据传输延迟问题，同时提高模型对不同类型织物缺陷的检测能力。</p><hr><h2 id="_11-研究内容" tabindex="-1">11. 研究内容 <a class="header-anchor" href="#_11-研究内容" aria-label="Permalink to &quot;11. 研究内容&quot;">​</a></h2><h3 id="系统构建" tabindex="-1">系统构建 <a class="header-anchor" href="#系统构建" aria-label="Permalink to &quot;系统构建&quot;">​</a></h3><ul><li>采用基于边缘计算的检测系统，选用EfficientDet - D0算法，利用边缘计算将计算任务从云端卸载到边缘设备，提高检测速度，保护企业生产数据隐私，降低网络带宽需求和生产成本。</li></ul><h3 id="数据增强与优化" tabindex="-1">数据增强与优化 <a class="header-anchor" href="#数据增强与优化" aria-label="Permalink to &quot;数据增强与优化&quot;">​</a></h3><ul><li>对训练数据集进行增强，包括随机裁剪、翻转、模糊、亮度增益和噪声添加等操作，以模拟不同相机视角、光照条件等实际情况，增强模型在工业场景中的鲁棒性，并将其应用于五个不同织物数据集验证效果。</li></ul><h3 id="模型部署与加速" tabindex="-1">模型部署与加速 <a class="header-anchor" href="#模型部署与加速" aria-label="Permalink to &quot;模型部署与加速&quot;">​</a></h3><ul><li>在本地工作站训练模型后移植到边缘设备NVIDIA Jetson TX2，使用TensorRT对模型进行优化和加速，通过层与张量融合、权重与激活精度校准等技术减少计算层数量，优化模型结构，提高检测速度，使其满足工业检测速度要求。</li></ul><h3 id="性能评估" tabindex="-1">性能评估 <a class="header-anchor" href="#性能评估" aria-label="Permalink to &quot;性能评估&quot;">​</a></h3><ul><li>在配置特定硬件和软件的本地工作站及边缘设备上进行实验，使用五个真实世界织物生产线上采集并手动标注的数据集，通过每秒帧数（FPS）和平均精度均值（mAP）等指标评估模型在不同数据集上的检测速度和精度，并对比边缘计算与云计算的响应延迟，验证所提方法的可行性和有效性。</li></ul><hr><h2 id="_12-研究目的" tabindex="-1">12. 研究目的 <a class="header-anchor" href="#_12-研究目的" aria-label="Permalink to &quot;12. 研究目的&quot;">​</a></h2><h3 id="性能提升" tabindex="-1">性能提升 <a class="header-anchor" href="#性能提升" aria-label="Permalink to &quot;性能提升&quot;">​</a></h3><ul><li>提高工业织物缺陷检测的准确性，确保能够精准识别各类缺陷，降低误检和漏检率，为产品质量控制提供可靠依据。</li><li>显著提升检测速度，满足高速生产线的实时检测需求，避免因检测延迟导致的生产效率损失。</li></ul><h3 id="成本与升级优化" tabindex="-1">成本与升级优化 <a class="header-anchor" href="#成本与升级优化" aria-label="Permalink to &quot;成本与升级优化&quot;">​</a></h3><ul><li>降低检测系统在生产线上的功耗，减少能源消耗，降低企业运营成本，提高经济效益。</li><li>确保检测系统具备良好的可扩展性，使生产线在未来能够方便地进行升级和改进，适应不断变化的生产工艺和质量要求。</li></ul><hr><h2 id="_13-研究方法" tabindex="-1">13. 研究方法 <a class="header-anchor" href="#_13-研究方法" aria-label="Permalink to &quot;13. 研究方法&quot;">​</a></h2><h3 id="数据增强" tabindex="-1">数据增强 <a class="header-anchor" href="#数据增强" aria-label="Permalink to &quot;数据增强&quot;">​</a></h3><ul><li>采用随机裁剪策略模拟不同相机视角采集的样本，随机翻转扩大数据规模，随机亮度增益模拟不同光照条件，添加噪声和模糊增强模型对复杂环境的适应能力，从而提高训练模型的质量和鲁棒性。</li></ul><h3 id="模型优化" tabindex="-1">模型优化 <a class="header-anchor" href="#模型优化" aria-label="Permalink to &quot;模型优化&quot;">​</a></h3><ul><li>利用TensorRT从层与张量融合、权重与激活精度校准两个方面对神经网络推理阶段进行优化。通过水平和垂直合并层减少计算层数量，形成更紧凑高效的CBR结构，降低CUDA核心使用数量，减小模型结构，提高推理速度。</li></ul><h3 id="实验设计" tabindex="-1">实验设计 <a class="header-anchor" href="#实验设计" aria-label="Permalink to &quot;实验设计&quot;">​</a></h3><ul><li>在本地工作站（Intel i7 - 5930K处理器、64GB内存、NVIDIA GeForce GTX TITAN X GPU，Windows 10操作系统，Tensorflow 2.1深度学习框架）和边缘设备NVIDIA Jetson TX2（NVIDIA Pascal架构GPU，256 CUDA核心，8GB内存，双核Denver2处理器和四核ARM架构cortex - A57，功耗7.5W）上分别进行实验。</li><li>使用五个不同类型织物（深红色织物DRF、网格织物GF、迷彩织物CF、数码印花织物DPF、浅蓝色织物LBF）的数据集，对其进行增强处理，划分训练集（90%）和测试集（10%），在实验中比较EfficientDet - D0与YOLO - V3、SSD、RetinaNet等主流单阶段检测方法的性能，包括定性分析（视觉对比检测结果）和定量分析（通过FPS和mAP评估检测速度和精度）。</li></ul><hr><h2 id="_14-最大创新点" tabindex="-1">14. 最大创新点 <a class="header-anchor" href="#_14-最大创新点" aria-label="Permalink to &quot;14. 最大创新点&quot;">​</a></h2><h3 id="技术融合创新" tabindex="-1">技术融合创新 <a class="header-anchor" href="#技术融合创新" aria-label="Permalink to &quot;技术融合创新&quot;">​</a></h3><ul><li>创新性地将EfficientDet - D0算法与边缘计算相结合，充分发挥EfficientDet轻量化、可扩展的优势，使其在资源受限的边缘设备上实现高效运行，有效解决了传统云计算模式下数据传输延迟的问题，显著提高了检测系统的整体性能。</li></ul><h3 id="优化策略" tabindex="-1">优化策略 <a class="header-anchor" href="#优化策略" aria-label="Permalink to &quot;优化策略&quot;">​</a></h3><ul><li>提出一套全面的数据增强和模型优化策略，包括多种数据增强操作以增强模型鲁棒性，以及使用TensorRT对模型进行深度优化加速，使模型在边缘设备上的检测速度大幅提升，达到每秒22.7帧，满足实时工业缺陷检测需求，同时保持较高的检测精度，平均精度均值（mAP）在多个数据集上表现优异。</li></ul><h3 id="系统适应性" tabindex="-1">系统适应性 <a class="header-anchor" href="#系统适应性" aria-label="Permalink to &quot;系统适应性&quot;">​</a></h3><ul><li>所设计的检测系统能够很好地适应工业生产场景中对低功耗、可扩展性和实时性的严格要求，为工业织物缺陷检测提供了一种高效、可行的解决方案，具有重要的实际应用价值和推广前景。</li></ul><hr><h2 id="_15-启发与展望" tabindex="-1">15. 启发与展望 <a class="header-anchor" href="#_15-启发与展望" aria-label="Permalink to &quot;15. 启发与展望&quot;">​</a></h2><h3 id="技术推广" tabindex="-1">技术推广 <a class="header-anchor" href="#技术推广" aria-label="Permalink to &quot;技术推广&quot;">​</a></h3><ul><li>本研究展示了边缘计算在工业检测领域的巨大潜力，未来可进一步推广边缘计算技术在其他类似工业场景中的应用，如汽车制造、电子设备生产等，提高生产过程中的质量控制和效率。</li></ul><h3 id="模型优化方向" tabindex="-1">模型优化方向 <a class="header-anchor" href="#模型优化方向" aria-label="Permalink to &quot;模型优化方向&quot;">​</a></h3><ul><li>继续探索更轻量化、高效的深度学习模型，针对不同应用场景进一步优化模型结构和参数，在保证检测精度的前提下，进一步降低模型计算复杂度和资源需求，以适应更广泛的边缘设备部署。</li></ul><h3 id="多模态数据融合" tabindex="-1">多模态数据融合 <a class="header-anchor" href="#多模态数据融合" aria-label="Permalink to &quot;多模态数据融合&quot;">​</a></h3><ul><li>考虑结合多种类型的数据（如图像、纹理、光谱等）进行织物缺陷检测，开发多模态数据融合算法，充分利用不同数据的互补信息，提高检测系统对复杂缺陷的识别能力和准确性。</li></ul><h3 id="自适应检测系统" tabindex="-1">自适应检测系统 <a class="header-anchor" href="#自适应检测系统" aria-label="Permalink to &quot;自适应检测系统&quot;">​</a></h3><ul><li>研究能够自适应不同生产环境和织物类型的智能检测系统，通过在线学习和模型更新机制，使检测系统能够自动适应新的生产条件和缺陷类型，减少人工干预，提高系统的灵活性和适应性。</li></ul><h3 id="标准化与产业化" tabindex="-1">标准化与产业化 <a class="header-anchor" href="#标准化与产业化" aria-label="Permalink to &quot;标准化与产业化&quot;">​</a></h3><ul><li>推动基于边缘计算的织物缺陷检测技术的标准化和产业化发展，建立相关行业标准和规范，促进检测设备和系统的集成化、商业化生产，降低成本，提高市场竞争力，推动纺织行业的智能化升级。</li></ul><hr><h2 id="_16-术语解释" tabindex="-1">16. 术语解释 <a class="header-anchor" href="#_16-术语解释" aria-label="Permalink to &quot;16. 术语解释&quot;">​</a></h2><h3 id="efficientdet" tabindex="-1">EfficientDet <a class="header-anchor" href="#efficientdet" aria-label="Permalink to &quot;EfficientDet&quot;">​</a></h3><ul><li>一种轻量级、可扩展的目标检测网络，由多个模型（D0 - D7）组成，其主干网络采用EfficientNet，通过大量深度可分离卷积实现轻量化，网络颈部使用双向加权特征金字塔网络（BiFPN）进行特征融合，能够在不同资源约束条件下实现高效的目标检测，在本文中用于织物缺陷检测。</li></ul><h3 id="tensorrt" tabindex="-1">TensorRT <a class="header-anchor" href="#tensorrt" aria-label="Permalink to &quot;TensorRT&quot;">​</a></h3><ul><li>NVIDIA专门为神经网络推理阶段提供的优化工具，主要从层与张量融合、权重与激活精度校准两个方面进行优化。通过合并计算层减少计算图层次和CUDA核心使用数量，优化模型结构，提高推理速度，使神经网络在推理计算时更加高效快速，在本文中用于优化EfficientDet - D0模型，加速织物缺陷检测过程。</li></ul><h3 id="边缘计算" tabindex="-1">边缘计算 <a class="header-anchor" href="#边缘计算" aria-label="Permalink to &quot;边缘计算&quot;">​</a></h3><ul><li>一种计算模式，将计算能力和存储设施下沉到靠近用户或数据源的一侧，整合网络、计算、存储和应用的核心功能。通过分布式部署和靠近数据源的优势，有效解决数据传输延迟、高宽带成本和数据拥塞等问题，适用于对实时性和低延迟要求较高的应用场景，如工业互联网、智能交通等，在本文中用于构建织物缺陷检测系统，将计算任务从云端迁移到边缘设备，提高检测效率。</li></ul><h3 id="map-mean-average-precision" tabindex="-1">mAP (Mean Average Precision) <a class="header-anchor" href="#map-mean-average-precision" aria-label="Permalink to &quot;mAP (Mean Average Precision)&quot;">​</a></h3><ul><li>衡量目标检测模型性能的重要指标，表示平均精度均值。通过计算不同召回率下精度的平均值，综合评估模型在检测不同类别目标时的准确性，mAP值越高，说明模型检测精度越高。在本文中用于评估所提出的织物缺陷检测方法在不同数据集上的检测精度，从而比较不同模型和方法的性能优劣。</li></ul>',104),o=[r];function n(h,d,c,u,s,f){return i(),e("div",null,o)}const q=a(l,[["render",n]]);export{m as __pageData,q as default};
