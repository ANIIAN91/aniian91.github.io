import{_ as a,c as e,o as n,R as t}from"./chunks/framework.C6kDZlj-.js";const _=JSON.parse('{"title":"Nginx-Proxy-Manager初次/非初次登录502 bad gateway","description":"","frontmatter":{},"headers":[],"relativePath":"linux/20241123.md","filePath":"linux/20241123.md","lastUpdated":1732933722000}'),s={name:"linux/20241123.md"},r=t(`<h1 id="nginx-proxy-manager初次-非初次登录502-bad-gateway" tabindex="-1">Nginx-Proxy-Manager初次/非初次登录502 bad gateway <a class="header-anchor" href="#nginx-proxy-manager初次-非初次登录502-bad-gateway" aria-label="Permalink to &quot;Nginx-Proxy-Manager初次/非初次登录502 bad gateway&quot;">​</a></h1><h2 id="进入docker项目" tabindex="-1">进入docker项目 <a class="header-anchor" href="#进入docker项目" aria-label="Permalink to &quot;进入docker项目&quot;">​</a></h2><p><code>docker exec -it nginxproxymanager /bin/bash</code></p><h2 id="从docker中复制到当前目录" tabindex="-1">从docker中复制到当前目录 <a class="header-anchor" href="#从docker中复制到当前目录" aria-label="Permalink to &quot;从docker中复制到当前目录&quot;">​</a></h2><p><code>docker cp nginxproxymanager:/app/index.js ./index.js</code></p><h2 id="从当前目录复制到docker" tabindex="-1">从当前目录复制到docker <a class="header-anchor" href="#从当前目录复制到docker" aria-label="Permalink to &quot;从当前目录复制到docker&quot;">​</a></h2><p><code>docker cp ./index.js nginxproxymanager:/app/index.js</code></p><h2 id="将-then-internalipranges-fetch-备注掉就可以了" tabindex="-1">将 &#39; .then(internalIpRanges.fetch) &#39; 备注掉就可以了 <a class="header-anchor" href="#将-then-internalipranges-fetch-备注掉就可以了" aria-label="Permalink to &quot;将 &#39; .then(internalIpRanges.fetch) &#39; 备注掉就可以了&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>return migrate.latest()</span></span>
<span class="line"><span>                .then(setup)</span></span>
<span class="line"><span>                .then(schema.getCompiledSchema)</span></span>
<span class="line"><span>        //      .then(internalIpRanges.fetch)</span></span>
<span class="line"><span>                .then(() =&gt; {</span></span>
<span class="line"><span>                        internalCertificate.initTimer();</span></span>
<span class="line"><span>                        internalIpRanges.initTimer();</span></span></code></pre></div>`,9),i=[r];function o(c,p,d,l,h,g){return n(),e("div",null,i)}const m=a(s,[["render",o]]);export{_ as __pageData,m as default};
